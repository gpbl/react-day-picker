// Generated by scripts/tsmorph.ts
import type { PropsBase } from 'react-day-picker';

type ParsedMember = {
  name: keyof PropsBase;
  type: string;
  required: boolean;
  deprecated: string | false;
  jsDocComments: string | undefined;
  see: (string | undefined)[] | undefined;
};

const propsBase: Array<ParsedMember> = [
  {
    name: 'className',
    type: 'string',
    required: false,
    deprecated: false,
    jsDocComments: 'The CSS class to add to the container element.',
    see: []
  },
  {
    name: 'classNames',
    type: 'Partial<ClassNames>',
    required: false,
    deprecated: false,
    jsDocComments:
      'Change the class names used by DayPicker.\n\nUse this prop when you need to change the default class names — for example\nwhen using CSS modules.',
    see: []
  },
  {
    name: 'modifiersClassNames',
    type: 'ModifiersClassNames',
    required: false,
    deprecated: false,
    jsDocComments:
      'Change the class name for the day matching the `modifiers`.',
    see: []
  },
  {
    name: 'style',
    type: 'React.CSSProperties',
    required: false,
    deprecated: false,
    jsDocComments: 'Style to apply to the container element.',
    see: []
  },
  {
    name: 'styles',
    type: 'Partial<Styles>',
    required: false,
    deprecated: false,
    jsDocComments: 'Change the inline styles of the HTML elements.',
    see: []
  },
  {
    name: 'modifiersStyles',
    type: 'ModifiersStyles',
    required: false,
    deprecated: false,
    jsDocComments:
      'Change the inline style for the day matching the `modifiers`.',
    see: []
  },
  {
    name: 'colorScheme',
    type: 'ColorScheme',
    required: false,
    deprecated: false,
    jsDocComments: '',
    see: []
  },
  {
    name: 'contrast',
    type: 'ContrastPreference',
    required: false,
    deprecated: false,
    jsDocComments: '',
    see: []
  },
  {
    name: 'id',
    type: 'string',
    required: false,
    deprecated: false,
    jsDocComments:
      'A unique id to replace the random generated ids – used by DayPicker for\naccessibility.',
    see: []
  },
  {
    name: 'defaultMonth',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments:
      'The initial month to show in the calendar. Use this prop to let DayPicker\ncontrol the current month. If you need to set the month programmatically,\nuse `month` and `onMonthChange`.',
    see: []
  },
  {
    name: 'month',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments:
      'The month displayed in the calendar.\n\nAs opposed to `PropsBase.defaultMonth}, use this prop with\n`PropsBase.onMonthChange} to change the month programmatically.',
    see: []
  },
  {
    name: 'numberOfMonths',
    type: 'number',
    required: false,
    deprecated: false,
    jsDocComments: 'The number of displayed months.',
    see: []
  },
  {
    name: 'fromDate',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments: 'The earliest day to start the month navigation.',
    see: []
  },
  {
    name: 'toDate',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments: 'The latest day to end the month navigation.',
    see: []
  },
  {
    name: 'fromMonth',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments: 'The earliest month to start the month navigation.',
    see: []
  },
  {
    name: 'toMonth',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments: 'The latest month to end the month navigation.',
    see: []
  },
  {
    name: 'fromYear',
    type: 'number',
    required: false,
    deprecated: false,
    jsDocComments: 'The earliest year to start the month navigation.',
    see: []
  },
  {
    name: 'toYear',
    type: 'number',
    required: false,
    deprecated: false,
    jsDocComments: 'The latest year to end the month navigation.',
    see: []
  },
  {
    name: 'pagedNavigation',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Paginate the month navigation displaying the `numberOfMonths` at time.',
    see: []
  },
  {
    name: 'reverseMonths',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Render the months in reversed order (when {@link numberOfMonths } is set) to\ndisplay the most recent month first.',
    see: []
  },
  {
    name: 'hideNavigation',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      "Hide the navigation buttons. This prop won't disable the navigation: to\ndisable the navigation, use {@link disableNavigation }.",
    see: []
  },
  {
    name: 'disableNavigation',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      "Disable the navigation between months. This prop won't hide the navigation: to\nhide the navigation, use {@link hideNavigation }.",
    see: []
  },
  {
    name: 'dropdownNavigation',
    type: 'boolean | "month" | "year"',
    required: false,
    deprecated: false,
    jsDocComments:
      'Show dropdowns to navigate between months or years.\n\n- `true`: display the dropdowns for both month and year.\n- `month`: display the dropdown for the month.\n- `year`: display the dropdown for the year.\n- `false`: hide the dropdowns.\n\n**Note:** showing the dropdown will default {@link fromYear } to the 100 years\nago, and {@link toYear } to the current year.',
    see: []
  },
  {
    name: 'fixedWeeks',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Display always 6 weeks per each month, regardless the month’s number of weeks. Weeks will be filled with the days from the next month.',
    see: []
  },
  {
    name: 'hideWeekdayRow',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments: 'Hide the row displaying the weekday row header.',
    see: []
  },
  {
    name: 'showOutsideDays',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Show the outside days (days falling in the next or the previous month).',
    see: []
  },
  {
    name: 'showWeekNumber',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Show the week numbers column. Weeks are numbered according to the local\nweek index.\n\n- to use ISO week numbering, use the `ISOWeek` prop.\n- to change how the week numbers are displayed, use the `Formatters` prop.',
    see: []
  },
  {
    name: 'ISOWeek',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Use ISO week dates instead of the locale setting. Setting this prop will\nignore `weekStartsOn` and `firstWeekContainsDate`.',
    see: ['https://en.wikipedia.org/wiki/ISO_week_date']
  },
  {
    name: 'components',
    type: 'CustomComponents',
    required: false,
    deprecated: false,
    jsDocComments:
      'Change the components used for rendering the calendar elements.',
    see: []
  },
  {
    name: 'footer',
    type: 'React.ReactNode',
    required: false,
    deprecated: false,
    jsDocComments: 'Content to add to the table footer element.',
    see: []
  },
  {
    name: 'autoFocus',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      "When a selection mode is set, DayPicker will focus the first selected day\n(if set) or the today's date (if not disabled).\n\nUse this prop when you need to focus DayPicker after a user actions, for\nimproved accessibility.",
    see: []
  },
  {
    name: 'disabled',
    type: 'Matcher[]',
    required: false,
    deprecated: false,
    jsDocComments: 'Apply the `disabled` modifier to the matching days.',
    see: []
  },
  {
    name: 'hidden',
    type: 'Matcher[]',
    required: false,
    deprecated: false,
    jsDocComments:
      'Apply the `hidden` modifier to the matching days. Will hide them from the\ncalendar.',
    see: []
  },
  {
    name: 'today',
    type: 'Date',
    required: false,
    deprecated: false,
    jsDocComments:
      'The today’s date. Default is the current date. This date will get the\n`today` modifier to style the day.',
    see: []
  },
  {
    name: 'modifiers',
    type: 'Record<string, Matcher[]>',
    required: false,
    deprecated: false,
    jsDocComments: 'Add modifiers to the matching days.',
    see: []
  },
  {
    name: 'labels',
    type: 'Partial<Labels>',
    required: false,
    deprecated: false,
    jsDocComments:
      'Labels creators to override the defaults. Use this prop to customize the\naria-label attributes in DayPicker.',
    see: []
  },
  {
    name: 'formatters',
    type: 'Partial<Formatters>',
    required: false,
    deprecated: false,
    jsDocComments:
      'Formatters used to format dates to strings. Use this prop to override the\ndefault functions.',
    see: []
  },
  {
    name: 'dir',
    type: 'string',
    required: false,
    deprecated: false,
    jsDocComments:
      'The text direction of the calendar. Use `ltr` for left-to-right (default)\nor `rtl` for right-to-left.',
    see: []
  },
  {
    name: 'nonce',
    type: 'string',
    required: false,
    deprecated: false,
    jsDocComments:
      'A cryptographic nonce ("number used once") which can be used by Content\nSecurity Policy for the inline `style` attributes.',
    see: []
  },
  {
    name: 'title',
    type: 'string',
    required: false,
    deprecated: false,
    jsDocComments: 'Add a `title` attribute to the container element.',
    see: []
  },
  {
    name: 'lang',
    type: 'string',
    required: false,
    deprecated: false,
    jsDocComments: 'Add the language tag to the container element.',
    see: []
  },
  {
    name: 'locale',
    type: 'Locale',
    required: false,
    deprecated: false,
    jsDocComments: 'The date-fns locale object used to localize dates.',
    see: ['https://date-fns.org/docs/Locale']
  },
  {
    name: 'weekStartsOn',
    type: '0 | 1 | 2 | 3 | 4 | 5 | 6',
    required: false,
    deprecated: false,
    jsDocComments:
      "The index of the first day of the week (0 - Sunday). Overrides the locale's one.",
    see: []
  },
  {
    name: 'firstWeekContainsDate',
    type: '1 | 4',
    required: false,
    deprecated: false,
    jsDocComments:
      'The day of January, which is always in the first week of the year.',
    see: [
      'https://date-fns.org/docs/getWeek',
      'https://en.wikipedia.org/wiki/Week#Numbering'
    ]
  },
  {
    name: 'useAdditionalWeekYearTokens',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Enable `DD` and `DDDD` for week year tokens when formatting or parsing dates.',
    see: ['https://date-fns.org/docs/Unicode-Tokens']
  },
  {
    name: 'useAdditionalDayOfYearTokens',
    type: 'boolean',
    required: false,
    deprecated: false,
    jsDocComments:
      'Enable `YY` and `YYYY` for day of year tokens when formatting or parsing dates.',
    see: ['https://date-fns.org/docs/Unicode-Tokens']
  },
  {
    name: 'onMonthChange',
    type: 'MonthChangeEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event fired when the user navigates between months.',
    see: []
  },
  {
    name: 'onDayClick',
    type: 'DayMouseEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a day is clicked.',
    see: []
  },
  {
    name: 'onDayFocus',
    type: 'DayFocusEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a day is focused.',
    see: []
  },
  {
    name: 'onDayBlur',
    type: 'DayFocusEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a day is blurred.',
    see: []
  },
  {
    name: 'onDayMouseEnter',
    type: 'DayMouseEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when the mouse enters a day.',
    see: []
  },
  {
    name: 'onDayMouseLeave',
    type: 'DayMouseEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when the mouse leaves a day.',
    see: []
  },
  {
    name: 'onDayKeyDown',
    type: 'DayKeyboardEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a key is pressed on a day.',
    see: []
  },
  {
    name: 'onDayKeyUp',
    type: 'DayKeyboardEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a key is released on a day.',
    see: []
  },
  {
    name: 'onDayKeyPress',
    type: 'DayKeyboardEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a key is pressed and released on a day.',
    see: []
  },
  {
    name: 'onDayPointerEnter',
    type: 'DayPointerEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a pointer enters a day.',
    see: []
  },
  {
    name: 'onDayPointerLeave',
    type: 'DayPointerEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a pointer leaves a day.',
    see: []
  },
  {
    name: 'onDayTouchCancel',
    type: 'DayTouchEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a touch is cancelled on a day.',
    see: []
  },
  {
    name: 'onDayTouchEnd',
    type: 'DayTouchEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a touch ends on a day.',
    see: []
  },
  {
    name: 'onDayTouchMove',
    type: 'DayTouchEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a touch moves on a day.',
    see: []
  },
  {
    name: 'onDayTouchStart',
    type: 'DayTouchEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when a touch starts on a day.',
    see: []
  },
  {
    name: 'onNextClick',
    type: 'MonthChangeEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when the next month button is clicked.',
    see: []
  },
  {
    name: 'onPrevClick',
    type: 'MonthChangeEventHandler',
    required: false,
    deprecated: false,
    jsDocComments: 'Event handler when the previous month button is clicked.',
    see: []
  },
  {
    name: 'onWeekNumberClick',
    type: 'WeekNumberClickEventHandler',
    required: false,
    deprecated: false,
    jsDocComments:
      'Event handler when a week number is clicked. Requires {@link showWeekNumber } to be set.',
    see: []
  },
  {
    name: 'captionLayout',
    type: 'CaptionLayout',
    required: false,
    deprecated:
      'To show the dropdowns, use {@link dropdownNavigation }. To hide the navigation buttons, set {@link hideNavigation }.',
    jsDocComments:
      'Change the layout of the caption.\n\n- `buttons`: display prev/right buttons\n- `dropdown`: display dropdowns to change the month and the year\n\n**Note:** the `dropdown` layout is available only when `fromDate`,\n`fromMonth` or`fromYear` and `toDate`, `toMonth` or `toYear` are set.',
    see: []
  }
];
export default propsBase;
